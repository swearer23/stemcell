// Generated by CoffeeScript 1.4.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define([], function() {
  var CommonFormView;
  return {
    CommonFormView: CommonFormView = (function(_super) {

      __extends(CommonFormView, _super);

      function CommonFormView() {
        this.render = __bind(this.render, this);

        this.submitHandler = __bind(this.submitHandler, this);
        return CommonFormView.__super__.constructor.apply(this, arguments);
      }

      CommonFormView.prototype.initialize = function(model) {
        this.model = model;
        return this.getModel();
      };

      CommonFormView.prototype.submitHandler = function() {
        var obj,
          _this = this;
        this.submitDisable();
        this.model.off("change");
        this.model.on("change", function() {
          _this.render();
          return _this.updateSuccessHandler();
        });
        this.model.onError = function() {
          return _this.errorInfo(_this.model.error);
        };
        obj = ViewHelper.formArray2Obj(this.form.serializeArray());
        this.updateModel(obj);
        return false;
      };

      CommonFormView.prototype.render = function() {
        this.template = _.template(this.tpl, {
          obj: this.model.toJSON()
        });
        this.$el.html(this.template);
        this.form = this.$el.find("form");
        return this.form.submit(this.submitHandler);
      };

      CommonFormView.prototype.getModel = function() {};

      return CommonFormView;

    })(Stemcell.View)
  };
});
